"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSidebarJson = void 0;
const path = __importStar(require("path"));
const getSidebarJson = (navigation, options) => {
    var _a, _b;
    const navJson = [];
    (_a = navigation.children) === null || _a === void 0 ? void 0 : _a.forEach((navigationItem) => {
        var _a;
        if (navigationItem.isLabel) {
            navJson.push({
                title: navigationItem.title,
                children: (_a = navigationItem.children) === null || _a === void 0 ? void 0 : _a.map((navItem) => {
                    var _a;
                    return [
                        getUrlKey(navItem.url),
                        ((_a = options.sidebar) === null || _a === void 0 ? void 0 : _a.fullNames)
                            ? navItem.title
                            : getShortName(navItem.title),
                    ];
                }),
            });
        }
        else {
            const outDir = path.relative(process.cwd(), options.out);
            navJson.push([
                getUrlKey(navigationItem.url) === 'README'
                    ? `/${outDir}/`
                    : `/${outDir}/modules`,
                navigationItem.title,
            ]);
        }
    });
    if (((_b = options.sidebar) === null || _b === void 0 ? void 0 : _b.parentCategory) &&
        options.sidebar.parentCategory !== 'none') {
        return [
            {
                title: options.sidebar.parentCategory,
                children: navJson,
                initialOpenGroupIndex: -1,
                collapsable: false,
            },
        ];
    }
    return navJson;
};
exports.getSidebarJson = getSidebarJson;
const getShortName = (title) => {
    const longTitle = title.split('.');
    return longTitle[longTitle.length - 1];
};
const getUrlKey = (url) => {
    return url.replace('.md', '');
};
